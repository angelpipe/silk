From b69a54cd74af5601f1be0f4402693288a5b8637f Mon Sep 17 00:00:00 2001
From: Michael Vines <mvines@silklabs.com>
Date: Fri, 29 Apr 2016 20:08:54 -0700
Subject: [PATCH] Remove DRM

Change-Id: I0360b01ebf33e7af718d40fd7728cc5be349abf2
---
 drm/Android.mk                                     |  0
 media/libmediaplayerservice/Android.mk             |  1 -
 .../nuplayer/GenericSource.cpp                     |  3 --
 media/libstagefright/Android.mk                    |  2 -
 media/libstagefright/AwesomePlayer.cpp             | 54 ----------------------
 media/libstagefright/DataSource.cpp                |  5 --
 media/libstagefright/FileSource.cpp                | 41 +---------------
 media/libstagefright/MediaExtractor.cpp            | 10 +---
 media/libstagefright/http/Android.mk               |  2 +-
 media/libstagefright/http/MediaHTTP.cpp            | 21 +--------
 10 files changed, 4 insertions(+), 135 deletions(-)
 create mode 100644 drm/Android.mk

diff --git a/drm/Android.mk b/drm/Android.mk
new file mode 100644
index 0000000..e69de29
diff --git a/media/libmediaplayerservice/Android.mk b/media/libmediaplayerservice/Android.mk
index 8ebc7c0..7f904b3 100644
--- a/media/libmediaplayerservice/Android.mk
+++ b/media/libmediaplayerservice/Android.mk
@@ -28,7 +28,6 @@ LOCAL_SHARED_LIBRARIES :=       \
     libcamera_client            \
     libcrypto                   \
     libcutils                   \
-    libdrmframework             \
     liblog                      \
     libdl                       \
     libgui                      \
diff --git a/media/libmediaplayerservice/nuplayer/GenericSource.cpp b/media/libmediaplayerservice/nuplayer/GenericSource.cpp
index d6b267b..834be80 100644
--- a/media/libmediaplayerservice/nuplayer/GenericSource.cpp
+++ b/media/libmediaplayerservice/nuplayer/GenericSource.cpp
@@ -740,9 +740,6 @@ void NuPlayer::GenericSource::disconnect() {
 }
 
 void NuPlayer::GenericSource::setDrmPlaybackStatusIfNeeded(int playbackStatus, int64_t position) {
-    if (mDecryptHandle != NULL) {
-        mDrmManagerClient->setPlaybackStatus(mDecryptHandle, playbackStatus, position);
-    }
     mSubtitleTrack.mPackets = new AnotherPacketSource(NULL);
     mTimedTextTrack.mPackets = new AnotherPacketSource(NULL);
 }
diff --git a/media/libstagefright/Android.mk b/media/libstagefright/Android.mk
index 594e2db..f74fbdb 100644
--- a/media/libstagefright/Android.mk
+++ b/media/libstagefright/Android.mk
@@ -37,7 +37,6 @@ LOCAL_SRC_FILES:=                         \
         CodecBase.cpp                     \
         DataSource.cpp                    \
         DataURISource.cpp                 \
-        DRMExtractor.cpp                  \
         ESDS.cpp                          \
         FileSource.cpp                    \
         FLACExtractor.cpp                 \
@@ -105,7 +104,6 @@ LOCAL_SHARED_LIBRARIES := \
         libcamera_client \
         libcutils \
         libdl \
-        libdrmframework \
         libexpat \
         libgui \
         libicui18n \
diff --git a/media/libstagefright/AwesomePlayer.cpp b/media/libstagefright/AwesomePlayer.cpp
index 1a1f6db..63bcc7d 100644
--- a/media/libstagefright/AwesomePlayer.cpp
+++ b/media/libstagefright/AwesomePlayer.cpp
@@ -455,13 +455,6 @@ status_t AwesomePlayer::setDataSource_l(
 }
 
 void AwesomePlayer::checkDrmStatus(const sp<DataSource>& dataSource) {
-    dataSource->getDrmInfo(mDecryptHandle, &mDrmManagerClient);
-    if (mDecryptHandle != NULL) {
-        CHECK(mDrmManagerClient);
-        if (RightsStatus::RIGHTS_VALID != mDecryptHandle->status) {
-            notifyListener_l(MEDIA_ERROR, MEDIA_ERROR_UNKNOWN, ERROR_DRM_NO_LICENSE);
-        }
-    }
 }
 
 status_t AwesomePlayer::setDataSource_l(const sp<MediaExtractor> &extractor) {
@@ -602,13 +595,6 @@ void AwesomePlayer::reset_l() {
 
     notifyListener_l(MEDIA_STOPPED);
 
-    if (mDecryptHandle != NULL) {
-            mDrmManagerClient->setPlaybackStatus(mDecryptHandle,
-                    Playback::STOP, 0);
-            mDecryptHandle = NULL;
-            mDrmManagerClient = NULL;
-    }
-
     if (mFlags & PLAYING) {
         uint32_t params = IMediaPlayerService::kBatteryDataTrackDecoder;
         if ((mAudioSource != NULL) && (mAudioSource != mAudioTrack)) {
@@ -1057,13 +1043,6 @@ status_t AwesomePlayer::play_l() {
     modifyFlags(PLAYING, SET);
     modifyFlags(FIRST_FRAME, SET);
 
-    if (mDecryptHandle != NULL) {
-        int64_t position;
-        getPosition(&position);
-        mDrmManagerClient->setPlaybackStatus(mDecryptHandle,
-                Playback::START, position / 1000);
-    }
-
     if (mAudioSource != NULL) {
         if (mAudioPlayer == NULL) {
             createAudioPlayer_l();
@@ -1096,11 +1075,6 @@ status_t AwesomePlayer::play_l() {
 
                 modifyFlags((PLAYING | FIRST_FRAME), CLEAR);
 
-                if (mDecryptHandle != NULL) {
-                    mDrmManagerClient->setPlaybackStatus(
-                            mDecryptHandle, Playback::STOP, 0);
-                }
-
                 return err;
             }
         }
@@ -1447,11 +1421,6 @@ status_t AwesomePlayer::pause_l(bool at_eos) {
 
     modifyFlags(PLAYING, CLEAR);
 
-    if (mDecryptHandle != NULL) {
-        mDrmManagerClient->setPlaybackStatus(mDecryptHandle,
-                Playback::PAUSE, 0);
-    }
-
     if(!(mFlags & VIDEO_AT_EOS)){
         Mutex::Autolock autoLock(mStatsLock);
         mStats.mLastPausedTimeMs = mVideoTimeUs/1000;
@@ -1676,12 +1645,6 @@ void AwesomePlayer::seekAudioIfNecessary_l() {
         mWatchForAudioSeekComplete = true;
         mWatchForAudioEOS = true;
 
-        if (mDecryptHandle != NULL) {
-            mDrmManagerClient->setPlaybackStatus(mDecryptHandle,
-                    Playback::PAUSE, 0);
-            mDrmManagerClient->setPlaybackStatus(mDecryptHandle,
-                    Playback::START, mSeekTimeUs / 1000);
-        }
     }
 }
 
@@ -1964,13 +1927,6 @@ void AwesomePlayer::finishSeekIfNecessary(int64_t videoTimeUs) {
     modifyFlags(FIRST_FRAME, SET);
     mSeeking = NO_SEEK;
 
-    if (mDecryptHandle != NULL) {
-        mDrmManagerClient->setPlaybackStatus(mDecryptHandle,
-                Playback::PAUSE, 0);
-        mDrmManagerClient->setPlaybackStatus(mDecryptHandle,
-                Playback::START, videoTimeUs / 1000);
-    }
-
     {
         Mutex::Autolock autoLock(mStatsLock);
         mStats.mLastSeekToTimeMs = mSeekTimeUs/1000;
@@ -2136,10 +2092,6 @@ void AwesomePlayer::onVideoEvent() {
 
             modifyFlags((PLAYING | FIRST_FRAME), CLEAR);
 
-            if (mDecryptHandle != NULL) {
-               mDrmManagerClient->setPlaybackStatus(
-                       mDecryptHandle, Playback::STOP, 0);
-            }
             return;
         }
     }
@@ -3408,12 +3360,6 @@ status_t AwesomePlayer::suspend() {
     {
         Mutex::Autolock autoLock(mLock);
 
-        // Set PAUSE to DrmManagerClient which will be set START in play_l()
-        if (mDecryptHandle != NULL) {
-            mDrmManagerClient->setPlaybackStatus(mDecryptHandle,
-                        Playback::PAUSE, 0);
-        }
-
         cancelPlayerEvents();
     }
 
diff --git a/media/libstagefright/DataSource.cpp b/media/libstagefright/DataSource.cpp
index 31e328a..3810f42 100755
--- a/media/libstagefright/DataSource.cpp
+++ b/media/libstagefright/DataSource.cpp
@@ -201,11 +201,6 @@ void Sniffer::registerDefaultSniffers() {
     registerSniffer_l(SniffWVM);
     registerSniffer_l(ExtendedExtractor::Sniff);
 
-    char value[PROPERTY_VALUE_MAX];
-    if (property_get("drm.service.enabled", value, NULL)
-            && (!strcmp(value, "1") || !strcasecmp(value, "true"))) {
-        registerSniffer_l(SniffDRM);
-    }
 }
 
 // static
diff --git a/media/libstagefright/FileSource.cpp b/media/libstagefright/FileSource.cpp
index a7ca3da..315b674 100644
--- a/media/libstagefright/FileSource.cpp
+++ b/media/libstagefright/FileSource.cpp
@@ -70,7 +70,6 @@ FileSource::~FileSource() {
     if (mDecryptHandle != NULL) {
         // To release mDecryptHandle
         CHECK(mDrmManagerClient);
-        mDrmManagerClient->closeDecryptSession(mDecryptHandle);
         mDecryptHandle = NULL;
     }
 
@@ -103,7 +102,7 @@ ssize_t FileSource::readAt(off64_t offset, void *data, size_t size) {
 
     if (mDecryptHandle != NULL && DecryptApiType::CONTAINER_BASED
             == mDecryptHandle->decryptApiType) {
-        return readAtDRM(offset, data, size);
+        return UNKNOWN_ERROR;
    } else {
         off64_t result = lseek64(mFd, offset + mOffset, SEEK_SET);
         if (result == -1) {
@@ -129,19 +128,10 @@ status_t FileSource::getSize(off64_t *size) {
 
 sp<DecryptHandle> FileSource::DrmInitialization(const char *mime) {
     if (mDrmManagerClient == NULL) {
-        mDrmManagerClient = new DrmManagerClient();
-    }
-
-    if (mDrmManagerClient == NULL) {
         return NULL;
     }
 
     if (mDecryptHandle == NULL) {
-        mDecryptHandle = mDrmManagerClient->openDecryptSession(
-                mFd, mOffset, mLength, mime);
-    }
-
-    if (mDecryptHandle == NULL) {
         delete mDrmManagerClient;
         mDrmManagerClient = NULL;
     }
@@ -155,33 +145,4 @@ void FileSource::getDrmInfo(sp<DecryptHandle> &handle, DrmManagerClient **client
     *client = mDrmManagerClient;
 }
 
-ssize_t FileSource::readAtDRM(off64_t offset, void *data, size_t size) {
-    size_t DRM_CACHE_SIZE = 1024;
-    if (mDrmBuf == NULL) {
-        mDrmBuf = new unsigned char[DRM_CACHE_SIZE];
-    }
-
-    if (mDrmBuf != NULL && mDrmBufSize > 0 && (offset + mOffset) >= mDrmBufOffset
-            && (offset + mOffset + size) <= (mDrmBufOffset + mDrmBufSize)) {
-        /* Use buffered data */
-        memcpy(data, (void*)(mDrmBuf+(offset+mOffset-mDrmBufOffset)), size);
-        return size;
-    } else if (size <= DRM_CACHE_SIZE) {
-        /* Buffer new data */
-        mDrmBufOffset =  offset + mOffset;
-        mDrmBufSize = mDrmManagerClient->pread(mDecryptHandle, mDrmBuf,
-                DRM_CACHE_SIZE, offset + mOffset);
-        if (mDrmBufSize > 0) {
-            int64_t dataRead = 0;
-            dataRead = size > mDrmBufSize ? mDrmBufSize : size;
-            memcpy(data, (void*)mDrmBuf, dataRead);
-            return dataRead;
-        } else {
-            return mDrmBufSize;
-        }
-    } else {
-        /* Too big chunk to cache. Call DRM directly */
-        return mDrmManagerClient->pread(mDecryptHandle, data, size, offset + mOffset);
-    }
-}
 }  // namespace android
diff --git a/media/libstagefright/MediaExtractor.cpp b/media/libstagefright/MediaExtractor.cpp
index 4e5b3c3..fcb1863 100755
--- a/media/libstagefright/MediaExtractor.cpp
+++ b/media/libstagefright/MediaExtractor.cpp
@@ -81,15 +81,7 @@ sp<MediaExtractor> MediaExtractor::Create(
             return NULL;
         }
         ++originalMime;
-        if (!strncmp(mime, "drm+es_based+", 13)) {
-            // DRMExtractor sets container metadata kKeyIsDRM to 1
-            return new DRMExtractor(source, originalMime);
-        } else if (!strncmp(mime, "drm+container_based+", 20)) {
-            mime = originalMime;
-            isDrm = true;
-        } else {
-            return NULL;
-        }
+        return NULL;
     }
 
     MediaExtractor *ret = NULL;
diff --git a/media/libstagefright/http/Android.mk b/media/libstagefright/http/Android.mk
index 7f3307d..60be3c1 100644
--- a/media/libstagefright/http/Android.mk
+++ b/media/libstagefright/http/Android.mk
@@ -23,6 +23,6 @@ LOCAL_CFLAGS += -Wno-multichar
 
 LOCAL_CFLAGS += -Werror
 
-include $(BUILD_SHARED_LIBRARY)
+#include $(BUILD_SHARED_LIBRARY)
 
 endif
diff --git a/media/libstagefright/http/MediaHTTP.cpp b/media/libstagefright/http/MediaHTTP.cpp
index 6c8bbf9..aa73fcc 100644
--- a/media/libstagefright/http/MediaHTTP.cpp
+++ b/media/libstagefright/http/MediaHTTP.cpp
@@ -145,25 +145,7 @@ status_t MediaHTTP::reconnectAtOffset(off64_t offset, bool* queryAndSetProxy) {
 // DRM...
 
 sp<DecryptHandle> MediaHTTP::DrmInitialization(const char* mime) {
-    if (mDrmManagerClient == NULL) {
-        mDrmManagerClient = new DrmManagerClient();
-    }
-
-    if (mDrmManagerClient == NULL) {
-        return NULL;
-    }
-
-    if (mDecryptHandle == NULL) {
-        mDecryptHandle = mDrmManagerClient->openDecryptSession(
-                String8(mLastURI.c_str()), mime);
-    }
-
-    if (mDecryptHandle == NULL) {
-        delete mDrmManagerClient;
-        mDrmManagerClient = NULL;
-    }
-
-    return mDecryptHandle;
+    return NULL;
 }
 
 void MediaHTTP::getDrmInfo(
@@ -199,7 +181,6 @@ void MediaHTTP::clearDRMState_l() {
     if (mDecryptHandle != NULL) {
         // To release mDecryptHandle
         CHECK(mDrmManagerClient);
-        mDrmManagerClient->closeDecryptSession(mDecryptHandle);
         mDecryptHandle = NULL;
     }
 }
-- 
1.9.1

